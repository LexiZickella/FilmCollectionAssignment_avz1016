// <auto-generated />
using FilmCollectionAssignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmCollectionAssignment.Migrations
{
    [DbContext(typeof(FilmAdditions))]
    [Migration("20230222062734_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("FilmCollectionAssignment.Models.AddFilm", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmId");

                    b.HasIndex("CategoryId");

                    b.ToTable("addFilms");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            CategoryId = 3,
                            Director = "Christopher Nolan",
                            Edited = false,
                            Rating = "PG-13",
                            Title = "The Dark Knight",
                            Year = (ushort)2008
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 6,
                            Director = "Damien Chazelle",
                            Edited = false,
                            Rating = "PG-13",
                            Title = "La La Land",
                            Year = (ushort)2016
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 1,
                            Director = "David Yates",
                            Edited = false,
                            Rating = "PG",
                            Title = "Harry Potter and the Half-Blood Prince",
                            Year = (ushort)2009
                        });
                });

            modelBuilder.Entity("FilmCollectionAssignment.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Action"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Romantic Comedy"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Children"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Musical"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Documentary"
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "Western"
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "Black Comedy"
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("FilmCollectionAssignment.Models.AddFilm", b =>
                {
                    b.HasOne("FilmCollectionAssignment.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
